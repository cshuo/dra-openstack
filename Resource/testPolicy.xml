<PolicyGroup name = "group1">

<Policy name = "policy1" target = "arbiterPMA">

    <rule name = "matlab">
        (defrule matlab
        (evacuation (instance ?instance) (type MATLAB_SLAVE))
        =>
        (bind ?hostList (python-call getAllHost ?instance))
        (bind ?masterHost (python-call hostFilter ?hostList "hostHasInstanceType($HOST, 'master') > 0" select))
        (bind ?dest_hostList (python-call hostFilter ?hostList "last_n_avg_statistic($HOST, 'cpu_util', 2) &lt; 85" filter))
        (bind ?destHost (python-call hostRankFilter ?dest_hostList ?masterHost "getTimeDelay($HOST, $MASTER)"))
        (bind ?srcHost (python-call getVmHost ?instance))
        (python-call generateEvent migration ?instance ?srcHost ?destHost))
    </rule>

    <rule name="migration">
        (defrule migration
        (migration (instance ?instance) (src ?srcHost) (dest ?destHost))
        =>
        (python-call Migrate ?srcHost ?instance ?destHost))
    </rule>

    <rule name="game_guarantee">
        (defrule game_guarantee
        (declare (salience 100))
        ?migration &lt;- (migration (instance ?instance) (src ?srcHost) (dest ?destHost))
        =>
        (if (= (python-call hostHasInstanceType ?destHost GAME) 0)
            then
            (bind ?bandwidth (python-call hostPredictData ?destHost bandwidth 2 avg))
            (if (> ?bandwidth 800)
                then
                (python-call print_log "retract fact..")
                (retract ?migration)
                else
                (python-call print_log "bandwidth ok.."))
            else
            (python-call print_log "destHost has no GAME type...")
        ))
    </rule>

</Policy>
</PolicyGroup>
